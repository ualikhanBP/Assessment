<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-13T14:38:40 GST" name="Default suite" finished-at="2022-11-13T14:39:11 GST" duration-ms="30239">
    <groups>
    </groups>
    <test started-at="2022-11-13T14:38:40 GST" name="Default test" finished-at="2022-11-13T14:39:11 GST" duration-ms="30239">
      <class name="NoteSpotScenarios.ExecutionFile">
        <test-method is-config="true" signature="Startup()[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:38:40 GST" name="Startup" finished-at="2022-11-13T14:38:48 GST" duration-ms="7981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Startup -->
        <test-method signature="WebsiteAccess()[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:38:48 GST" name="WebsiteAccess" finished-at="2022-11-13T14:38:54 GST" duration-ms="5300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebsiteAccess -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:38:54 GST" name="getResult" finished-at="2022-11-13T14:38:55 GST" duration-ms="930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WebsiteAccess status=SUCCESS method=ExecutionFile.WebsiteAccess()[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="Login()[pri:1, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:38:55 GST" name="Login" finished-at="2022-11-13T14:39:02 GST" duration-ms="7145" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Login is Successful expected [PRODUCTS] but found [Products]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Login is Successful expected [PRODUCTS] but found [Products]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at Functions.HelpingFunctions.Verify(HelpingFunctions.java:72)
at NoteSpotScenarios.LoginToApplication.Login(LoginToApplication.java:43)
at NoteSpotScenarios.ExecutionFile.Login(ExecutionFile.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:39:02 GST" name="getResult" finished-at="2022-11-13T14:39:02 GST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=FAILURE method=ExecutionFile.Login()[pri:1, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="SelectRandomItems()[pri:2, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:39:02 GST" name="SelectRandomItems" finished-at="2022-11-13T14:39:08 GST" duration-ms="6296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectRandomItems -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:39:08 GST" name="getResult" finished-at="2022-11-13T14:39:08 GST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectRandomItems status=SUCCESS method=ExecutionFile.SelectRandomItems()[pri:2, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="CheckItemsInCart()[pri:3, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:39:08 GST" name="CheckItemsInCart" finished-at="2022-11-13T14:39:10 GST" duration-ms="2090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckItemsInCart -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:39:10 GST" name="getResult" finished-at="2022-11-13T14:39:11 GST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckItemsInCart status=SUCCESS method=ExecutionFile.CheckItemsInCart()[pri:3, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:NoteSpotScenarios.ExecutionFile@5c30a9b0]" started-at="2022-11-13T14:39:11 GST" name="teardown" finished-at="2022-11-13T14:39:11 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- NoteSpotScenarios.ExecutionFile -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
